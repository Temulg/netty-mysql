plugins {
	id 'java'
	id 'eclipse'
}

repositories {
	mavenLocal()
	jcenter()
}

dependencies {
	compile 'org.apache.logging.log4j:log4j-api:2.8.2'
	compile 'com.google.guava:guava:22.0'
	compile 'io.netty:netty-codec:4.1.13.Final'
	compile 'org.apache.logging.log4j:log4j-core:2.8.2'
	testCompile 'org.testng:testng:6.11'
}

eclipse {
	classpath {
		downloadSources = true
		downloadJavadoc = true
	}
}

test {
	useTestNG()
}

tasks.withType(Test) {task ->
	project.properties.each{k, v ->
		if (k.startsWith("udentric.")) {
			task.systemProperty(k, v)
		}
	}
}

task run(type: JavaExec) {
	main = project.properties.getOrDefault('mainClass', '')
	args project.properties.getOrDefault('cmdLineArgs', '')
	jvmArgs project.properties.getOrDefault('jvmLineArgs', '')
	classpath = sourceSets.test.runtimeClasspath
}

task debug(type: JavaExec) {
	main = project.properties.getOrDefault('mainClass', '')
	args project.properties.getOrDefault('cmdLineArgs', '')
	jvmArgs project.properties.getOrDefault('jvmLineArgs', '')
	classpath = sourceSets.test.runtimeClasspath
	standardInput = System.in
	ignoreExitValue = true
	debug = true
}
